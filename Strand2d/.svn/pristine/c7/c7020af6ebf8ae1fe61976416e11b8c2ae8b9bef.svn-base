#include "StrandSPTurbSABcViscousWall.h"
#include <math.h>


// [StrandSPTurbSABcViscousWall]
StrandSPTurbSABcViscousWall::StrandSPTurbSABcViscousWall()
{
}
// [StrandSPTurbSABcViscousWall]


// [~StrandSPTurbSABcViscousWall]
StrandSPTurbSABcViscousWall::~StrandSPTurbSABcViscousWall()
{
}
// [~StrandSPTurbSABcViscousWall]


// [surfaceForces]
void StrandSPTurbSABcViscousWall::surfaceForces(const double* A,
						const double* q,
						const double* qa,
						const double* qx,
						const double* qax,
						double* force)
{
  double rho,mu,ux,vx,uy,vy,dd,sxx,syy,sxy,syx;
  
  rho      = q  [0];
  mu       = qa [5];
  ux       = qax[1];
  vx       = qax[2];
  uy       = qax[nqa+1];
  vy       = qax[nqa+2];
  dd       =(ux+vy)/3.;
  sxx      = 2.*mu*(ux-dd);
  syy      = 2.*mu*(vy-dd);
  sxy      =    mu*(uy+vx);
  syx      = sxy;
  
  force[0] =-qa[0]*A[0]+sxx*A[0]+sxy*A[1];
  force[1] =-qa[0]*A[1]+syx*A[0]+syy*A[1];
}
// [surfaceForces]


// [BCVector]
void StrandSPTurbSABcViscousWall::BCVector(const double* nx,
					   const double* wx,
					   const double* qe,
					   const double* qae,
					   const double* q,
					   const double* qa,
					   double* r)
{
  double pb,ub,vb,tb,nb,pe,ue,ve,te,ne;

  pb   = qa[0];
  ub   = qa[1];
  vb   = qa[2];
  tb   = qa[3];
  nb   = qa[4];

  pe   = qae[0];
  ue   = qae[1];
  ve   = qae[2];
  te   = qae[3];
  ne   = qae[4];

  r[0] = pb-pe;
  r[1] = ub+ue-2.*wx[0];
  r[2] = vb+ve-2.*wx[1];
  r[3] = tb-te;
  r[4] = nb+ne;
}
// [BCVector]


// [BCVectorSelfJacobian]
void StrandSPTurbSABcViscousWall::BCVectorSelfJacobian(const double* nx,
						       const double* qe,
						       const double* qae,
						       const double* q,
						       const double* qa,
						       double* M)
{
  double rr,e,u,v,qq,grr,nu;
  rr    = 1./q[0];
  e     = q[3]*rr;
  u     = qa[1];
  v     = qa[2];
  nu    = qa[4];
  qq    = u*u+v*v;
  grr   = gm1*rr/rGas;

  M[0 ] = gm1*qq*.5;
  M[1 ] =-gm1*u;
  M[2 ] =-gm1*v;
  M[3 ] = gm1;
  M[4 ] = 0.;

  M[5 ] =-rr*u;
  M[6 ] = rr;
  M[7 ] = 0.;
  M[8 ] = 0.;
  M[9 ] = 0.;

  M[10] =-rr*v;
  M[11] = 0.;
  M[12] = rr;
  M[13] = 0.;
  M[14] = 0.;

  M[15] = grr*(qq-e);
  M[16] =-grr*u;
  M[17] =-grr*v;
  M[18] = grr;
  M[19] = 0.;
  
  M[20] =-rr*nu;
  M[21] = 0.;
  M[22] = 0.;
  M[23] = 0.;
  M[24] = rr;
}
// [BCVectorSelfJacobian]


// [BCVectorInteriorJacobian]
void StrandSPTurbSABcViscousWall::BCVectorInteriorJacobian(const double* nx,
							const double* qe,
							const double* qae,
							const double* q,
							const double* qa,
							double* M)
{
  double rr,e,u,v,qq,grr,nu;
  rr    = 1./qe[0];
  e     = qe[3]*rr;
  u     = qae[1];
  v     = qae[2];
  nu    = qae[4];
  qq    = u*u+v*v;
  grr   = gm1*rr/rGas;

  M[0 ] =-gm1*qq*.5;
  M[1 ] = gm1*u;
  M[2 ] = gm1*v;
  M[3 ] =-gm1;
  M[4 ] = 0.;

  M[5 ] =-rr*u;
  M[6 ] = rr;
  M[7 ] = 0.;
  M[8 ] = 0.;
  M[9 ] = 0.;

  M[10] =-rr*v;
  M[11] = 0.;
  M[12] = rr;
  M[13] = 0.;
  M[14] = 0.;

  M[15] =-grr*(qq-e);
  M[16] = grr*u;
  M[17] = grr*v;
  M[18] =-grr;
  M[19] = 0.;

  M[20] =-rr*nu;
  M[21] = 0.;
  M[22] = 0.;
  M[23] = 0.;
  M[24] = rr;

  /*
  M[20] = 0.;
  M[21] = 0.;
  M[22] = 0.;
  M[23] = 0.;
  M[24] = 0.;
  */

}
// [BCVectorInteriorJacobian]
